<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0;
nomenu = false; // Disable menu
menu_index = 0; // Initial image_index for menu

menu_open_firsttime = false; // Used for button prompt
disable_menu = false; // Permanent menu disable

//Arrow
arrow_index = 0;

//Item window
item_index = 0;
sword_equipped = false;

//Message window
message_window = false;
message_index = 0;
reading_message = false;
highlight_index = 0;
alarm_set(0, 6);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Button highlight flash
if (highlight_index == 3) highlight_index = 0;
else highlight_index += 1;

//Arrow animation
if (arrow_index == 0) arrow_index = 1;
else arrow_index = 0;

alarm_set(0,6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

//Disable menu
with (obj_player)
    {
    if (playerstate == STATE_PLAYER.kneel || playerstate = STATE_PLAYER.carry) { other.nomenu = true; }
    else other.nomenu = false;
    if (playerstate == STATE_PLAYER.combat)
        { 
        other.sword_equipped = true; 
        if (other.menu_index == 0) other.menu_index = 1;
        }
    else 
        {
        other.sword_equipped = false;
        if (other.menu_index == 1) other.menu_index = 0;
        }
    }
    
if (levelup) disable_menu = true;

//Open menu
if (!nomenu &amp;&amp; !disable_menu &amp;&amp; input_B1_r)
    {
    if (!menu_open) 
        {
        menu_open_firsttime = true;
        audio_play_sound(snd_menuopen, 10, false);
        menu_open = true;
        }
    else
        {
        audio_play_sound(snd_cancel, 10, false);
        reading_message = false; 
        menu_open = false;
        }
    }

//Close menu with escape
if (!nomenu &amp;&amp; !disable_menu &amp;&amp; keyboard_check_released(vk_escape))
    {
    if (reading_message) reading_message = false;
    else if (menu_open) 
        {
        audio_play_sound(snd_cancel, 10, false);
        menu_open = false;
        }
    }

//Navigate menu
if (menu_open &amp;&amp; !reading_message)
    {
    if (sword_equipped)
        {
        if (input_padL_p)
            {
            audio_play_sound(snd_menu_nav, 10, false);
            if (menu_index == 1) menu_index = 5;
            else menu_index -= 1;
            }
        if (input_padR_p)
            {
            audio_play_sound(snd_menu_nav, 10, false);
            if (menu_index == 5) menu_index = 1;
            else menu_index += 1;
            }
        }
    else
        {
        if (input_padL_p)
            {
            audio_play_sound(snd_menu_nav, 10, false);
            if (menu_index == 0) menu_index = 5;
            else if (menu_index == 2) menu_index = 0;
            else menu_index -= 1;
            }
        if (input_padR_p)
            {
            audio_play_sound(snd_menu_nav, 10, false);
            if (menu_index == 5) menu_index = 0;
            else if (menu_index == 0) menu_index = 2;
            else menu_index += 1;
            }
        }
    }

//Item menu
if (menu_open &amp;&amp; (menu_index == 0 || menu_index == 1))
    {
    if (sword_equipped)
        {
        if (item_index == 0) item_index = 1;
        if (input_padU_p)
            {
            audio_play_sound(snd_menu_updown, 10, false);
            if (item_index == 1) item_index = 10;
            else item_index -= 1;
            }
        if (input_padD_p)
            {
            audio_play_sound(snd_menu_updown, 10, false);
            if (item_index == 10) item_index = 1;
            else item_index += 1;
            }
        }
    else
        {
        if (input_padU_p)
            {
            audio_play_sound(snd_menu_updown, 10, false);
            if (item_index == 2) item_index = 0;
            else if (item_index == 0) item_index = 10;
            else item_index -= 1;
            }
        if (input_padD_p)
            {
            audio_play_sound(snd_menu_updown, 10, false);
            if (item_index == 0) item_index = 2;
            else if (item_index == 10) item_index = 0;
            else item_index += 1;
            }
        }
    }

//Messages menu
if (menu_open &amp;&amp; menu_index == 4)
    {
    if (input_B2_p)
        {
        audio_play_sound(snd_readmsg, 10, false);
        if (reading_message) reading_message = false;
        else reading_message = true;
        }
    if (input_padU_p)
        {
        audio_play_sound(snd_menu_updown, 10, false);
        if (message_index != 0) message_index -= 1;
        }
    else if (input_padD_p)
        {
        audio_play_sound(snd_menu_updown, 10, false);
        if (message_index != 9) message_index += 1;
        }
    }
else
    {
    reading_message = false;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (menu_open &amp;&amp; !reading_message)
    {
    draw_sprite(spr_menu_status, menu_index, display_get_gui_width() * 0.5, 
                display_get_gui_height() * 0.5 + 15);
    draw_sprite(spr_arrow_interact_right, arrow_index, display_get_gui_width() * 0.8, display_get_gui_height() * 0.25 - 4); 
    draw_sprite(spr_arrow_interact_left, arrow_index, display_get_gui_width() * 0.2, display_get_gui_height() * 0.25 - 4);
    }

//Item window
if (menu_open &amp;&amp; (menu_index == 0 || menu_index == 1))
    {
    if (item_index == 0) draw_sprite(spr_inv_weapon_hl, 0, display_get_gui_width() * 0.5 - 60, display_get_gui_height() * 0.5 - 7);
    else if  (item_index == 1) draw_sprite(spr_inv_weapon_hl, 0, display_get_gui_width() * 0.5 - 60, display_get_gui_height() * 0.5 - 7);
    else if  (item_index == 2) draw_sprite(spr_inv_armor_hl, 0, display_get_gui_width() * 0.5 - 1, display_get_gui_height() * 0.5 - 13);
    else if  (item_index == 3) draw_sprite(spr_inv_belt_hl, 0, display_get_gui_width() * 0.5 - 1, display_get_gui_height() * 0.5 + 14);
    else if  (item_index == 4) draw_sprite(spr_inv_gitch_hl, 0, display_get_gui_width() * 0.5 - 1, display_get_gui_height() * 0.5 + 27);
    else if  (item_index == 5) draw_sprite(spr_inv_pants_hl, 0, display_get_gui_width() * 0.5 - 1, display_get_gui_height() * 0.5 + 51);
    else if  (item_index == 6) draw_sprite(spr_inv_pocket_hl, 0, display_get_gui_width() * 0.5 - 24, display_get_gui_height() * 0.5 + 51);
    else if  (item_index == 7) draw_sprite(spr_inv_sock_hl, 0, display_get_gui_width() * 0.5 - 9, display_get_gui_height() * 0.5 + 75);
    else if  (item_index == 8) draw_sprite(spr_inv_sock_hl, 0, display_get_gui_width() * 0.5 + 8, display_get_gui_height() * 0.5 + 75);
    else if  (item_index == 9) draw_sprite(spr_inv_boot_hl, 0, display_get_gui_width() * 0.5 - 9, display_get_gui_height() * 0.5 + 90);
    else if  (item_index == 10) draw_sprite(spr_inv_boot_hl, 0, display_get_gui_width() * 0.5 + 8, display_get_gui_height() * 0.5 + 90);
    draw_sprite(spr_inv_desc, item_index, display_get_gui_width() * 0.5 + 112, display_get_gui_height() * 0.5 + 104);
    draw_sprite(spr_arrow_interact_up, arrow_index, display_get_gui_width() * 0.70 + 1, display_get_gui_height() * 0.25 + 31)
    draw_sprite(spr_arrow_interact_down, arrow_index, display_get_gui_width() * 0.70 + 1, display_get_gui_height() * 0.75)
    if (obj_player.antler_held) draw_sprite_stretched(spr_deer_antler, 0, display_get_gui_width() * 0.5 - 140, display_get_gui_height() * 0.5 + 45, 20, 20);
    else if (obj_player.key_held) draw_sprite_stretched(spr_key, 0, display_get_gui_width() * 0.5 - 140, display_get_gui_height() * 0.5 + 43, 20, 10);
    }


//Message window
if (menu_open &amp;&amp; menu_index == 4)
    {
    message_window = true;
    if (reading_message)
        {
        draw_sprite(spr_message_01, message_index, display_get_gui_width() * 0.5, display_get_gui_height() * 0.5);
        }
    else
        {
        draw_sprite(spr_open_button_hl, highlight_index, display_get_gui_width() * 0.5, 
                    display_get_gui_height() * 0.5 + 95);
        draw_sprite(spr_message_hl, 0, display_get_gui_width() * 0.5 - 1, 
                    display_get_gui_height() * 0.5 - 44 + (message_index * 12));
        }
    if (message_index &gt; 0) { draw_sprite(spr_arrow_interact_up, arrow_index, display_get_gui_width() * 0.80 + 1, display_get_gui_height() * 0.25 + 11) }
    if (message_index &lt; 9) { draw_sprite(spr_arrow_interact_down, arrow_index, display_get_gui_width() * 0.80 + 1, display_get_gui_height() * 0.75 + 22) }
    }
    
if (!menu_open_firsttime &amp;&amp; !ignore_player)
    {
    draw_set_font(fnt_screen);
    draw_set_color(c_white);
    draw_text(24, display_get_gui_height() * 0.5 + 72, "[B1] Menu");
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
