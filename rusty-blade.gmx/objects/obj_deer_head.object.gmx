<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_deer_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
show_arrow = false;

my_arrow = instance_create(x, y - 20, obj_interact_arrow_up);
with (my_arrow) 
    { 
    my_owner = other.id;
    image_alpha = 0; 
    }

//Sprite
image_index = 0;
image_speed = 0;

//Interaction
player_here = false;
fixed = 0;

//Key
key_spawned = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision check
player_here = place_meeting(x, y, obj_player);

//Arrow Display
if (menu_open || fixed || obj_player.playerstate == STATE_PLAYER.carry)
    {
    with (my_arrow) {image_alpha = 0; }
    show_arrow = false;
    }
else if (player_here &amp;&amp; obj_player.antler_held)
    {
    with (my_arrow) { image_alpha = 1; }
    show_arrow = true;
    }
else
    {
    with (my_arrow) { image_alpha = 0; }
    show_arrow = false;
    }

//Place antler
if (!menu_open &amp;&amp; player_here &amp;&amp; input_padU_p)
    {
    with (obj_player)
        {
        if (antler_held) 
            { 
            other.fixed = true; 
            antler_held = false;
            }
        }
    }

//Sprite
if (fixed &amp;&amp; !key_spawned)
    {
    audio_play_sound(snd_place_antler, 10, false);
    with(obj_keyholder) { alarm_set(0, 30); }
    image_index = 1;
    key_spawned = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
