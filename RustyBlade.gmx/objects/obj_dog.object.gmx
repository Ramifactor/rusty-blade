<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dog_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
scr_dog_init();

fetch = false;
get_bone = false;
fetch_return = false;

return_home = false;
current_x = 0;

run_away = false;
run_away_go = false;

can_play = false;
fs_sound = snd_fs_dog_stone;
timeline_index = tml_dog_footstep;
timeline_running = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fetch_return
get_bone = false;
fetch_return = true;

with(obj_dog_bone) { held_dog = true; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run away
run_away_go = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return home
if (x == current_x)//checks if dog has not moved since the alarm was set (no longer playing fetch)
    {
    movedir_x = 1;
    return_home = true;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fetch delay
var ind, soundtoplay;
ind = irandom(1);
if (ind == 0) soundtoplay = snd_dog_bark_1;
else soundtoplay = snd_dog_bark_2;

audio_play_sound(soundtoplay, 10, false);
return_home = false;
fetch = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End sniffing
sniffing = 0;
alarm_set(1, 600); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sniffing
sniffing = 1; 
alarm_set(2, 108); // sniff timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End petting
happy = false;

with(obj_player) 
        {
        playerstate = STATE_PLAYER.normal; 
        }

with (my_arrow)
    {
    image_alpha = 1;
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Footsteps

if (sprite_index == spr_dog_run)
    {
    timeline_running = true;
    timeline_position = image_index;
    }
else timeline_running = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event
scr_dog_movecollide();

if (hspd == 0) scr_item_show_arrow();

//Run away
if (obj_player.playerstate == STATE_PLAYER.combat &amp;&amp; !run_away)
    {
    run_away = true;
    alarm_set(5, 15);
    }
else if (player_here &amp;&amp; input_padD_p &amp;&amp; !happy &amp;&amp; !pet_delay &amp;&amp; hspd == 0) //pet
    {
    audio_play_sound(snd_dog_pet, 10, false);
    happy = true;
    alarm_set(0, 130);
    with(obj_player) 
        {
        playerstate = STATE_PLAYER.pet; 
        }
    with (my_arrow) 
        { 
        image_alpha = 0;
        } 
    //insert cool sound &amp; effect;
    }

if (fetch)
    {
    if (x &gt; obj_dog_bone.x) movedir_x = -1;
    else movedir_x = 1;
    if (abs(x - obj_dog_bone.x) &gt; 5) hspd = movedir_x * 4;
    else with (obj_dog_bone)
        {
        if (buried)
            {
            audio_play_sound(snd_dog_bite, 10, false);
            other.hspd = 0; 
            other.fetch = false;
            other.get_bone = true;
            with (other) { alarm_set(6, 20); }
            }
        }
    }
else if (fetch_return)
    {
    if (x &gt; obj_player.x) movedir_x = -1;
    else movedir_x = 1;
    if (abs(x - obj_player.x) &gt; 5) hspd = movedir_x * 4;
    else
        {
        fetch_return = false;
        hspd = 0;
        current_x = x;
        alarm_set(4, 450);
        }
    }

//Return home
if (return_home)
    {
    with (obj_dog_bone)
        {
        if (held_dog)
            {
            vspd = -2;
            held_dog = false;
            }
        }   
    if (x &gt;= 538)
        {
        hspd = 0;
        movedir_x = -1;
        return_home = false;
        }
    else if (!fetch)
        { 
        hspd = 3;
        }
    }
else if (run_away_go)
    {
    movedir_x = 1;
    if (x &gt;= 744)
        {
        instance_create(744, 235, obj_dog_scared);
        with (obj_noexit) { instance_destroy(); }
        with (my_arrow) { instance_destroy(); }
        instance_destroy();
        }
    else hspd = 4;
    }

//Animate
image_xscale = -movedir_x;

if (abs(hspd) &gt;= 2)
    {
    sprite_index = spr_dog_run;
    image_speed = 0.2;
    }
else if (sitting)
    {
    sprite_index = spr_dog_sit;
    image_speed = 0.1;
    }
else if (happy)
    {
    sprite_index = spr_dog_happy;
    image_speed = 0.2;
    }
else if (sniffing || get_bone)
    {
    sprite_index = spr_dog_sniff;
    image_speed = 0.1;
    }
else
    {
    sprite_index = spr_dog_idle;
    image_speed = 0.1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (obj_player.playerstate == STATE_PLAYER.combat)
    {
    draw_sprite(spr_dog_healthbar, 0, x, y - 16);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
